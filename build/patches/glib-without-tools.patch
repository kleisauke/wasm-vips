From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Tue, 8 Oct 2019 11:30:00 +0200
Subject: [PATCH 1/1] Do not build tools

We're only interested in the libraries.

Upstream-Status: Inappropriate [disable feature]
This patch is just for our convenience.

diff --git a/gio/meson.build b/gio/meson.build
index 1111111..2222222 100644
--- a/gio/meson.build
+++ b/gio/meson.build
@@ -400,19 +400,6 @@ if host_system != 'windows'
     contenttype_sources += files('gcontenttype.c')
     appinfo_sources += files('gdesktopappinfo.c')
     gio_unix_include_headers += files('gdesktopappinfo.h')
-    launch_desktop_sources = files('gio-launch-desktop.c')
-
-    if host_system == 'linux'
-      launch_desktop_sources += files('../glib/gjournal-private.c')
-    endif
-
-    gio_launch_desktop = executable('gio-launch-desktop', launch_desktop_sources,
-      include_directories : glibinc,
-      install : true,
-      install_dir : multiarch_libexecdir,
-      c_args : gio_c_args,
-      # intl.lib is not compatible with SAFESEH
-      link_args : noseh_link_args)
   endif
 
   subdir('xdgmime')
@@ -934,103 +921,6 @@ gconstructor_as_data_h = custom_target('gconstructor_as_data.h',
     output : ['gconstructor_as_data.h'],
     command : [python, '@INPUT0@', '@INPUT1@', 'gconstructor_code', '@OUTPUT@'])
 
-# Several installed executables
-gio_tool_sources = [
-  'gio-tool.c',
-  'gio-tool.h',
-  'gio-tool-cat.c',
-  'gio-tool-copy.c',
-  'gio-tool-info.c',
-  'gio-tool-launch.c',
-  'gio-tool-list.c',
-  'gio-tool-mime.c',
-  'gio-tool-mkdir.c',
-  'gio-tool-monitor.c',
-  'gio-tool-mount.c',
-  'gio-tool-move.c',
-  'gio-tool-open.c',
-  'gio-tool-rename.c',
-  'gio-tool-remove.c',
-  'gio-tool-save.c',
-  'gio-tool-set.c',
-  'gio-tool-trash.c',
-  'gio-tool-tree.c',
-]
-
-executable('gio', gio_tool_sources,
-  install : true,
-  c_args : gio_c_args,
-  # intl.lib is not compatible with SAFESEH
-  link_args : noseh_link_args,
-  dependencies : [libgio_dep, libgobject_dep, libgmodule_dep, libglib_dep])
-
-executable('gresource', 'gresource-tool.c',
-  install : true,
-  # intl.lib is not compatible with SAFESEH
-  link_args : noseh_link_args,
-  dependencies : [libelf, libgio_dep, libgobject_dep, libgmodule_dep, libglib_dep])
-
-gio_querymodules = executable('gio-querymodules', 'gio-querymodules.c', 'giomodule-priv.c',
-  install : true,
-  install_dir : multiarch_bindir,
-  c_args : gio_c_args,
-  # intl.lib is not compatible with SAFESEH
-  link_args : noseh_link_args,
-  dependencies : [libgio_dep, libgobject_dep, libgmodule_dep, libglib_dep])
-
-glib_compile_schemas = executable('glib-compile-schemas',
-  ['glib-compile-schemas.c'],
-  install : true,
-  install_dir : multiarch_bindir,
-  # intl.lib is not compatible with SAFESEH
-  link_args : noseh_link_args,
-  dependencies : [libgio_dep, libgobject_dep, libgmodule_dep, libglib_dep, gvdb_dep])
-
-glib_compile_resources = executable('glib-compile-resources',
-  [gconstructor_as_data_h, 'glib-compile-resources.c'],
-  install : true,
-  c_args : gio_c_args,
-  # intl.lib is not compatible with SAFESEH
-  link_args : noseh_link_args,
-  dependencies : [libgio_dep, libgobject_dep, libgmodule_dep, libglib_dep, gvdb_dep])
-
-# Cannot override those programs in cross compilation case because they are
-# native executables that cannot be run on the build machine.
-# See https://gitlab.gnome.org/GNOME/glib/issues/1859.
-if meson.can_run_host_binaries()
-  meson.override_find_program('glib-compile-schemas', glib_compile_schemas)
-  meson.override_find_program('glib-compile-resources', glib_compile_resources)
-  meson.override_find_program('gio-querymodules', gio_querymodules)
-endif
-
-executable('gsettings', 'gsettings-tool.c',
-  install : true,
-  c_args : gio_c_args,
-  # intl.lib is not compatible with SAFESEH
-  link_args : noseh_link_args,
-  dependencies : [libgio_dep, libgobject_dep, libgmodule_dep, libglib_dep])
-install_data('gschema.dtd',
-  install_dir : join_paths(get_option('datadir'), schemas_subdir))
-
-install_data(['gschema.loc', 'gschema.its'],
-  install_dir : join_paths(get_option('datadir'), 'gettext/its'))
-
-executable('gdbus', 'gdbus-tool.c',
-  install : true,
-  c_args : gio_c_args,
-  # intl.lib is not compatible with SAFESEH
-  link_args : noseh_link_args,
-  dependencies : [libgio_dep, libgobject_dep, libgmodule_dep, libglib_dep])
-
-if host_system != 'windows' and not glib_have_cocoa
-  executable('gapplication', 'gapplication-tool.c',
-    install : true,
-    c_args : gio_c_args,
-    # intl.lib is not compatible with SAFESEH
-    link_args : noseh_link_args,
-    dependencies : [libgio_dep, libgobject_dep, libgmodule_dep, libglib_dep])
-endif
-
 if enable_systemtap
   gio_stp = configure_file(input : 'gio.stp.in',
     output : '@0@.stp'.format(libgio.full_path().split('/').get(-1)),
@@ -1039,25 +929,6 @@ if enable_systemtap
   )
 endif
 
-if multiarch_bindir != get_option('bindir')
-  foreach exe : ['gio-querymodules', 'glib-compile-schemas']
-    if meson.version().version_compare('>=0.61.0')
-      install_symlink(
-        exe,
-        install_dir : get_option('bindir'),
-        pointing_to : get_option('prefix') / multiarch_bindir / exe,
-      )
-    else
-      warning(
-        'Please use Meson >= 0.61.0 or create a symlink @1@ -> @2@ in packaging'.format(
-          get_option('prefix') / get_option('bindir') / exe,
-          get_option('prefix') / multiarch_bindir / exe,
-        )
-      )
-    endif
-  endforeach
-endif
-
 if build_tests
     subdir('tests')
 endif
diff --git a/glib/meson.build b/glib/meson.build
index 1111111..2222222 100644
--- a/glib/meson.build
+++ b/glib/meson.build
@@ -432,7 +432,7 @@ if host_system == 'windows'
       include_directories : configinc,
       dependencies : [libglib_dep])
   endif
-else
+elif host_system != 'emscripten'
   gtester = executable('gtester', 'gtester.c',
     install : true,
     c_args : ['-UG_DISABLE_ASSERT'],
diff --git a/gobject/meson.build b/gobject/meson.build
index 1111111..2222222 100644
--- a/gobject/meson.build
+++ b/gobject/meson.build
@@ -152,10 +152,6 @@ libgobject_dep = declare_dependency(link_with : libgobject,
   dependencies : [libglib_dep, glib_enumtypes_dep])
 meson.override_dependency('gobject-2.0', libgobject_dep)
 
-executable('gobject-query', 'gobject-query.c',
-  install : true,
-  dependencies : [libglib_dep, libgobject_dep])
-
 install_data('gobject_gdb.py', install_dir : join_paths(glib_pkgdatadir, 'gdb'))
 gdb_conf = configuration_data()
 gdb_conf.set('datadir', glib_datadir)
diff --git a/meson.build b/meson.build
index 1111111..2222222 100644
--- a/meson.build
+++ b/meson.build
@@ -2381,7 +2381,6 @@ subdir('gobject')
 subdir('gthread')
 subdir('gmodule')
 subdir('gio')
-subdir('fuzzing')
 subdir('tools')
 
 # xgettext is optional (on Windows for instance)
